openapi: 3.0.3
info:
  title: UniTrivia
  description: API to the game of UniTrivia
  version: 1.0.0
  license:
    name: MIT License
    url: https://opensource.org/licenses/mit-license.php
servers:
  - url: http://localhost:3000/api
paths:
  /login:
    get:
      tags:
        - Usuario
      description: |
        Se le pasa como parámetros el nombre de usuario y la contraseña en texto plano.

        Devuelve el identificador temporal con el que identificar todas las operaciones
        relacionadas con el usuario y un error en caso de no poder identificarlo.
      operationId: login
      parameters:
        - name: username
          in: header
          required: true
          schema:
            type: string
        - name: password
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Login realizado exitosamente
          content:
            application/json:
              schema:
                type: string
        default:
          description: Error en el login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /register:
    post:
      tags:
        - Usuario
      description: |
        Se le pasa comos parámetros el nombre de usuario, la contraseña en texto plano, el email
        la pregunta de seguridad y la respuesta a dicha presgunta.

        Devuelve un mensaje de confirmación de caso de poder crear el usuario y un error en caso de no poder crearlo.
      operationId: register
      parameters:
        - name: username
          in: header
          required: true
          schema:
            type: string
        - name: password
          in: header
          required: true
          schema:
            type: string
        - name: email
          in: header
          required: true
          schema:
            type: string
        - name: preg
          in: header
          required: true
          schema:
            type: string
        - name: res
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                type: string
        default:
          description: Error en el registro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /profile/modify/password:
    post:
      tags:
        - Usuario
      description: |
        Se le pasa comos parámetros el nombre de usuario, la contraseña nueva en texto plano
        y la contraseña vieja o actual en texto plano

        Devuelve un mensaje de confirmación de caso de poder modificar la contraseña y
        un error en caso de error.
      security:
        - jwt: [ ]
      operationId: modifyPassword
      parameters:
        - name: jwt
          in: header
          required: true
          schema:
            type: string
        - name: new-password
          in: header
          required: true
          schema:
            type: string
        - name: old-password
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Contraseña cambiada exitosamente
          content:
            application/json:
              schema:
                type: string
        default:
          description: Error al cambiar contraseña
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login/recover/password:
    post:
      tags:
        - Usuario
      description: |
        Se le pasa comos parámetros el nombre de usuario, la respuesta a la pregunta de seguridad y
        la contraseña nueva en texto plano.

        Devuelve un mensaje de confirmación de caso de que la respuesta coincida con la proporcionda y se
        ha podido poder modificar la contraseña. Devuelve error en caso contrario.

      security:
        - jwt: [ ]
      operationId: recoverPassword
      parameters:
        - name: jwt
          in: header
          required: true
          schema:
            type: string
        - name: res
          in: header
          required: true
          schema:
            type: string
        - name: new-password
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Contraseña cambiada exitosamente
          content:
            application/json:
              schema:
                type: string
        default:
          description: Error al cambiar contraseña
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /logAsGuest:
    get:
      tags:
        - Usuario
      description: |
        No es necesario el paso de ningún parámetro.

        Devuelve el identificador temporal con el que identificar todas las operaciones
        relacionadas con el invitado.
      operationId: logAsGuest
      responses:
        default:
          description: Se le devuelve el identificador asignado
          content:
            application/json:
              schema:
                type: string
  /profile:
    get:
      tags:
        - Usuario
      description: |
        Obtiene toda la información del usuario: nombre de usuario, email, pregunta de seguridad,
          respuesta de seguridad, lista de objectos comprados, estadísticas del jugador, opciones
          de personalización y cantidad de monedas.
      security:
        - jwt: [ ]
      parameters:
        - name: jwt
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Objeto con toda la información del usuario.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        default:
          description: Error al obtener el usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Usuario
      description: |
        Elimina la información del usuario de la base de datos
      security:
        - jwt: [ ]
      parameters:
        - name: jwt
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Respuesta de exito
          content:
            application/json:
              schema:
                type: string
        default:
          description: Error al eliminar el usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /profile/modify/avatar:
    post:
      tags:
        - Usuario
      description: |
        Se le pasa comos parámetros el identificador que se ha asociado a dicho usuario en el login y
        el id del nuevo avatar que quiere usar el usuario en cuestión, este útimo debe pertenecer a su lista de comprados.

        Devuelve un mensaje de confirmación en caso de poder modificar el avatar. Devuelve un mensaje de error
        en caso contrario.
      operationId: modifyAvatar
      security:
        - jwt: []
      parameters:
        - name: jwt
          in: header
          required: true
          schema:
            type: string
        - name: id-avatar
          in: header
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Avatar cambiado con éxito
          content:
            application/json:
              schema:
                type: string
        default:
          description: Error al cambiar avatar
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /profile/modify/formFicha:
    post:
      tags:
        - Usuario
      description: |
        Se le pasa comos parámetros el identificador que se ha asociado a dicho usuario en el login y
        el id de la nueva forma de ficha que quiere usar el usuario en cuestión, este útimo debe pertenecer a su lista de comprados.

        Devuelve un mensaje de confirmación en caso de poder modificar la forma de ficha. Devuelve un mensaje de error
        en caso contrario.
      operationId: modifyFormFicha
      security:
        - jwt: [ ]
      parameters:
        - name: jwt
          in: header
          required: true
          schema:
            type: string
        - name: id-form-ficha
          in: header
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Forma de ficha cambiada con éxito
          content:
            application/json:
              schema:
                type: string
        default:
          description: Error al cambiar forma de ficha
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /profile/modify/banner:
    post:
      tags:
        - Usuario
      description: |
        Se le pasa comos parámetros el identificador que se ha asociado a dicho usuario en el login y
        el id del nuevo banner que quiere usar el usuario en cuestión, este útimo debe pertenecer a su lista de comprados.

        Devuelve un mensaje de confirmación en caso de poder modificar el banner. Devuelve un mensaje de error
        en caso contrario.
      operationId: modifyBanner
      security:
        - jwt: [ ]
      parameters:
        - name: jwt
          in: header
          required: true
          schema:
            type: string
        - name: id-banner
          in: header
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Banner cambiado con éxito
          content:
            application/json:
              schema:
                type: string
        default:
          description: Error al cambiar banner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /partida/reconexion:
    get:
      description: |
        Se le pasa comos parámetros el identificador que se ha asociado a dicho usuario en el login.

        Devuelve el identificador de la partida en la que está (conectado o desconectado),
        en caso de que no esté en ninguna partida string vacío. Si no se ha podido identificarlo,
        devuelve un error.
      operationId: reconexion
      parameters:
        - in: header
          name: jwt
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Devuelve el identificador de la sala en la que está o un string vacío.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error al encontrar si el jugador está en una partida
      security:
        - jwt: []
      tags:
        - Partida

  /tienda/catalogo:
    get:
      description: |
        Se le pasa comos parámetros el tipo de imágenes que se quieren recuperar

        Devuelve una lista con los nombre de las imágenes del tipo correspondiente.
      operationId: catalogo
      parameters:
        - in: header
          name: tipo
          required: true
          schema:
            type: string
            enum:
              - avatar
              - formFicha
              - banner
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array

          description: Devuelve el array con los nombre de las imágenes del tipo correspondiente
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error al recuperar imágenes
      tags:
        - Tienda

  /tienda/comprar:
    post:
      description: |
        Se le pasa el nombre de la imagen comprada

        Actualiza la base de datos del usuario para incorporar la imagen comprada a su lista de
        imágenes disponibles.
      operationId: comprar
      parameters:
        - in: header
          name: nombre
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Devuelve Ok si éxito
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error al actualizar la base de datos o no tiene dinero suficiente o ya está comprado
      tags:
        - Tienda
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Usuario:
      type: object
      properties:
        username:
          description: Nombre de usuario
          type: string
        email:
          description: Correo Electrónico del usuario
          type: string
        preg:
          description: Pregunta de seguridad del usuario
          type: string
        res:
          description: Respuesta de seguridad del usuario
          type: string
        coins:
          description: Cantidad de monedas del usuario
          type: integer
        nJugadas:
          description: Número de partidas jugadas por el usuario
          type: integer
        nGanadas:
          description: Número de partidas ganadas por el usuario
          type: integer
        avatar:
          description: El ObjectID del avatar del usuario
          type: string
        banner:
          description: El ObjectID del banner del usuario
          type: string
        ficha:
          description: El ObjectID de la forma de la ficha del usuario
          type: string
        comprados:
          description: El array de ObjectID con los objetos comproados por el usuario del usuario
          type: array
          items:
            type: string

  securitySchemes:
    jwt: # arbitrary name for the security scheme
      type: apiKey
      in: header
      name: jwt
