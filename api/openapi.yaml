openapi: 3.0.3
info:
  description: API to the game of UniTrivia
  license:
    name: MIT License
    url: https://opensource.org/licenses/mit-license.php
  title: UniTrivia
  version: 1.0.0
servers:
- url: http://localhost:3000/api
paths:
  /login:
    get:
      description: |
        Se le pasa como parámetros el nombre de usuario y la contraseña en texto plano.

        Devuelve el identificador temporal con el que identificar todas las operaciones
        relacionadas con el usuario y un error en caso de no poder identificarlo.
      operationId: login
      parameters:
      - explode: false
        in: header
        name: username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: password
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Login realizado exitosamente
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error en el login
      tags:
      - Usuario
      x-eov-operation-handler: controllers/UsuarioController
  /register:
    post:
      description: |
        Se le pasa comos parámetros el nombre de usuario, la contraseña en texto plano, el email
        la pregunta de seguridad y la respuesta a dicha presgunta.

        Devuelve un mensaje de confirmación de caso de poder crear el usuario y un error en caso de no poder crearlo.
      operationId: register
      parameters:
      - explode: false
        in: header
        name: username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: password
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: email
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: preg
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: res
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Usuario creado exitosamente
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error en el registro
      tags:
      - Usuario
      x-eov-operation-handler: controllers/UsuarioController
  /profile/modify/password:
    post:
      description: |
        Se le pasa comos parámetros el nombre de usuario, la contraseña nueva en texto plano
        y la contraseña vieja o actual en texto plano

        Devuelve un mensaje de confirmación de caso de poder modificar la contraseña y
        un error en caso de error.
      operationId: modifyPassword
      parameters:
      - explode: false
        in: header
        name: jwt
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: new-password
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: old-password
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Contraseña cambiada exitosamente
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error al cambiar contraseña
      security:
      - jwt: []
      tags:
      - Usuario
      x-eov-operation-handler: controllers/UsuarioController
  /login/recover/password:
    post:
      description: |
        Se le pasa comos parámetros el nombre de usuario, la respuesta a la pregunta de seguridad y
        la contraseña nueva en texto plano.

        Devuelve un mensaje de confirmación de caso de que la respuesta coincida con la proporcionda y se
        ha podido poder modificar la contraseña. Devuelve error en caso contrario.
      operationId: recoverPassword
      parameters:
      - explode: false
        in: header
        name: jwt
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: res
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: new-password
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Contraseña cambiada exitosamente
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error al cambiar contraseña
      security:
      - jwt: []
      tags:
      - Usuario
      x-eov-operation-handler: controllers/UsuarioController
  /logAsGuest:
    get:
      description: |
        No es necesario el paso de ningún parámetro.

        Devuelve el identificador temporal con el que identificar todas las operaciones
        relacionadas con el invitado.
      operationId: logAsGuest
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: Se le devuelve el identificador asignado
      tags:
      - Usuario
      x-eov-operation-handler: controllers/UsuarioController
  /profile:
    delete:
      description: |
        Elimina la información del usuario de la base de datos
      operationId: profileDELETE
      parameters:
      - explode: false
        in: header
        name: jwt
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Respuesta de exito
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error al eliminar el usuario
      security:
      - jwt: []
      tags:
      - Usuario
      x-eov-operation-handler: controllers/UsuarioController
    get:
      description: |
        Obtiene toda la información del usuario: nombre de usuario, email, pregunta de seguridad,
          respuesta de seguridad, lista de objectos comprados, estadísticas del jugador, opciones
          de personalización y cantidad de monedas.
      operationId: profileGET
      parameters:
      - explode: false
        in: header
        name: jwt
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
          description: Objeto con toda la información del usuario.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error al obtener el usuario
      security:
      - jwt: []
      tags:
      - Usuario
      x-eov-operation-handler: controllers/UsuarioController
  /profile/modify/avatar:
    post:
      description: |
        Se le pasa comos parámetros el identificador que se ha asociado a dicho usuario en el login y
        el id del nuevo avatar que quiere usar el usuario en cuestión, este útimo debe pertenecer a su lista de comprados.

        Devuelve un mensaje de confirmación en caso de poder modificar el avatar. Devuelve un mensaje de error
        en caso contrario.
      operationId: modifyAvatar
      parameters:
      - explode: false
        in: header
        name: jwt
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: id-avatar
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Avatar cambiado con éxito
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error al cambiar avatar
      security:
      - jwt: []
      tags:
      - Usuario
      x-eov-operation-handler: controllers/UsuarioController
  /profile/modify/formFicha:
    post:
      description: |
        Se le pasa comos parámetros el identificador que se ha asociado a dicho usuario en el login y
        el id de la nueva forma de ficha que quiere usar el usuario en cuestión, este útimo debe pertenecer a su lista de comprados.

        Devuelve un mensaje de confirmación en caso de poder modificar la forma de ficha. Devuelve un mensaje de error
        en caso contrario.
      operationId: modifyFormFicha
      parameters:
      - explode: false
        in: header
        name: jwt
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: id-form-ficha
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Forma de ficha cambiada con éxito
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error al cambiar forma de ficha
      security:
      - jwt: []
      tags:
      - Usuario
      x-eov-operation-handler: controllers/UsuarioController
  /profile/modify/banner:
    post:
      description: |
        Se le pasa comos parámetros el identificador que se ha asociado a dicho usuario en el login y
        el id del nuevo banner que quiere usar el usuario en cuestión, este útimo debe pertenecer a su lista de comprados.

        Devuelve un mensaje de confirmación en caso de poder modificar el banner. Devuelve un mensaje de error
        en caso contrario.
      operationId: modifyBanner
      parameters:
      - explode: false
        in: header
        name: jwt
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: id-banner
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Banner cambiado con éxito
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error al cambiar banner
      security:
      - jwt: []
      tags:
      - Usuario
      x-eov-operation-handler: controllers/UsuarioController
  /partida/reconexion:
    get:
      description: |
        Se le pasa comos parámetros el identificador que se ha asociado a dicho usuario en el login.

        Devuelve el identificador de la partida en la que está (conectado o desconectado),
        en caso de que no esté en ninguna partida string vacío. Si no se ha podido identificarlo,
        devuelve un error.
      operationId: reconexion
      parameters:
      - explode: false
        in: header
        name: jwt
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Devuelve el identificador de la sala en la que está o un string
            vacío.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error al encontrar si el jugador está en una partida
      security:
      - jwt: []
      tags:
      - Partida
      x-eov-operation-handler: controllers/PartidaController
  /tienda/catalogo:
    get:
      description: |
        Se le pasa comos parámetros el tipo de imágenes que se quieren recuperar

        Devuelve una lista con los nombre de las imágenes del tipo correspondiente.
      operationId: catalogo
      parameters:
      - explode: false
        in: header
        name: tipo
        required: true
        schema:
          enum:
          - avatar
          - formFicha
          - banner
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                  properties:
                    nombre:
                      type: string
                    precio:
                      type: number
                type: array
          description: Devuelve el array con los nombre de las imágenes del tipo correspondiente
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error al recuperar imágenes
      tags:
      - Tienda
      x-eov-operation-handler: controllers/TiendaController
  /tienda/comprar:
    post:
      description: |
        Se le pasa el nombre de la imagen comprada

        Actualiza la base de datos del usuario para incorporar la imagen comprada a su lista de
        imágenes disponibles.
      operationId: comprar
      parameters:
      - explode: false
        in: header
        name: nombre
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: jwt
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Devuelve Ok si éxito
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error al actualizar la base de datos o no tiene dinero suficiente
            o ya está comprado
      security:
      - jwt: []
      tags:
      - Tienda
      x-eov-operation-handler: controllers/TiendaController
  /tienda/insertarMonedas:
    post:
      description: |
        Se le pasa la cantidad de monedas a insertar.

        Actualiza la base de datos del usuario para incorporar las monedas a su cuenta.
        Si da error se informa.
      operationId: insertarMonedas
      parameters:
      - explode: false
        in: header
        name: cantidad
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: header
        name: jwt
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Devuelve Ok si éxito
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: |
            Error al actualizar la base de datos o no es un jwt válido.
      security:
      - jwt: []
      tags:
      - Tienda
      - Usuario
      x-eov-operation-handler: controllers/TiendaController
components:
  schemas:
    Error:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      required:
      - code
      - message
      type: object
    Usuario:
      example:
        preg: preg
        res: res
        coins: 0
        nGanadas: 1
        ficha: ficha
        banner: banner
        comprados:
        - comprados
        - comprados
        avatar: avatar
        nJugadas: 6
        email: email
        username: username
      properties:
        username:
          description: Nombre de usuario
          type: string
        email:
          description: Correo Electrónico del usuario
          type: string
        preg:
          description: Pregunta de seguridad del usuario
          type: string
        res:
          description: Respuesta de seguridad del usuario
          type: string
        coins:
          description: Cantidad de monedas del usuario
          type: integer
        nJugadas:
          description: Número de partidas jugadas por el usuario
          type: integer
        nGanadas:
          description: Número de partidas ganadas por el usuario
          type: integer
        avatar:
          description: El ObjectID del avatar del usuario
          type: string
        banner:
          description: El ObjectID del banner del usuario
          type: string
        ficha:
          description: El ObjectID de la forma de la ficha del usuario
          type: string
        comprados:
          description: El array de ObjectID con los objetos comproados por el usuario
            del usuario
          items:
            type: string
          type: array
      type: object
  securitySchemes:
    jwt:
      in: header
      name: jwt
      type: apiKey
